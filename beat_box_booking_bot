import json
import telebot
import os

token = 'PUT_TELEGRAM_BOT_ACCESS_TOKEN_HERE'

bot = telebot.TeleBot(token)

rehersal_time = 'не выбрано'
rehersal_room = 'не выбранa'
rehersal_date = 'не выбранa'
rehersal_user = ''

inline_keyboard = [
    [
        telebot.types.InlineKeyboardButton(
            text='Забронировать репетицию',
            url='',
            callback_data='book_rehersal'
            ),
            telebot.types.InlineKeyboardButton(
            text='Расписание см.',
            url='',
            callback_data='see_bookings'
            ),
            telebot.types.InlineKeyboardButton(
            text='',
            url='',
            callback_data='add_new_words_to_dictionary'
            )]
    ]


@bot.message_handler(commands=['start'])
def send_welcome(message):
    global rehersal_user
    bot.send_message(message.chat.id,'Добро пожаловать в BeatBox\n\n /start - перезапустить\n', reply_markup=telebot.types.InlineKeyboardMarkup(inline_keyboard))
    rehersal_user = message.from_user.id

@bot.message_handler(commands=['help'])
def book_room(message):
    bot.send_message(message.chat.id, 'BeatBox - helpppp ')

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):

    global rehersal_room, rehersal_time, rehersal_date

    if call.data == 'book_rehersal':

        rehersal_time = 'не выбрано'
        rehersal_room = 'не выбранa'
        rehersal_date = 'не выбранa'

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                text='КРИМИНАЛЬНОЕ ЧТИВО',
                callback_data='КРИМИНАЛЬНОЕ_ЧТИВО'
            )
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                text='ОТ ЗАКАТА ДО РАССВЕТА',
                callback_data='ОТ_ЗАКАТА_ДО_РАССВЕТА'
            )
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                text='БЕШЕНЫЕ ПСЫ',
                callback_data='БЕШЕНЫЕ_ПСЫ'
            )
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                text='МАЧЕТЕ',
                callback_data='МАЧЕТЕ'
            )
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                text='БОЛЬШОЙ КУШ',
                callback_data='БОЛЬШОЙ_КУШ'
            )
        )
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                text='КАРТЫ, ДЕНЬГИ, 2 СТВОЛА',
                callback_data='КАРТЫ_ДЕНЬГИ_2_СТВОЛА'
            )
        )
        bot.send_message(call.message.chat.id, f'Kомнатa для бронирования {rehersal_room}\nПользователь - {rehersal_user}\nВремя репетиции - {rehersal_time}\nДатa(число месяца) - {rehersal_date}\n\nВыберите комнату для репетиции...', reply_markup=keyboard)

    elif call.data in ['КАРТЫ_ДЕНЬГИ_2_СТВОЛА','БОЛЬШОЙ_КУШ','МАЧЕТЕ','БЕШЕНЫЕ_ПСЫ','ОТ_ЗАКАТА_ДО_РАССВЕТА','КРИМИНАЛЬНОЕ_ЧТИВО']:

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(telebot.types.InlineKeyboardButton(text='9:00-12:00', callback_data='9:00-12:00'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='12:00-15:00', callback_data='12:00-15:00'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='15:00-18:00', callback_data='15:00-18:00'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='18:00-21:00', callback_data='18:00-21:00'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='21:00-00:00', callback_data='21:00-00:00'))

        rehersal_room = call.data
        bot.send_message(call.message.chat.id, f'Kомнатa для бронирования {rehersal_room}\nПользователь - {rehersal_user}\nВремя репетиции - {rehersal_time}\nДатa(число месяца) - {rehersal_date}\n\nВыберите время для репетиции...', reply_markup=keyboard)

    elif call.data in ['9:00-12:00','12:00-15:00','15:00-18:00','18:00-21:00','21:00-00:00']:

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(telebot.types.InlineKeyboardButton(text='1', callback_data='1'),
                     telebot.types.InlineKeyboardButton(text='2', callback_data='2'),
                     telebot.types.InlineKeyboardButton(text='3', callback_data='3'),
                     telebot.types.InlineKeyboardButton(text='4', callback_data='4'),
                     telebot.types.InlineKeyboardButton(text='5', callback_data='5'),
                     telebot.types.InlineKeyboardButton(text='6', callback_data='6'),
                     telebot.types.InlineKeyboardButton(text='7', callback_data='7'),
                     telebot.types.InlineKeyboardButton(text='8', callback_data='8'),
                     telebot.types.InlineKeyboardButton(text='9', callback_data='9'),
                     telebot.types.InlineKeyboardButton(text='10', callback_data='10'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='11', callback_data='11'),
                     telebot.types.InlineKeyboardButton(text='12', callback_data='12'),
                     telebot.types.InlineKeyboardButton(text='13', callback_data='13'),
                     telebot.types.InlineKeyboardButton(text='14', callback_data='14'),
                     telebot.types.InlineKeyboardButton(text='15', callback_data='15'),
                     telebot.types.InlineKeyboardButton(text='16', callback_data='16'),
                     telebot.types.InlineKeyboardButton(text='17', callback_data='17'),
                     telebot.types.InlineKeyboardButton(text='18', callback_data='18'),
                     telebot.types.InlineKeyboardButton(text='19', callback_data='19'),
                     telebot.types.InlineKeyboardButton(text='20', callback_data='20'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='21', callback_data='21'),
                     telebot.types.InlineKeyboardButton(text='22', callback_data='22'),
                     telebot.types.InlineKeyboardButton(text='23', callback_data='23'),
                     telebot.types.InlineKeyboardButton(text='24', callback_data='24'),
                     telebot.types.InlineKeyboardButton(text='25', callback_data='25'),
                     telebot.types.InlineKeyboardButton(text='26', callback_data='26'),
                     telebot.types.InlineKeyboardButton(text='27', callback_data='27'),
                     telebot.types.InlineKeyboardButton(text='28', callback_data='28'),
                     telebot.types.InlineKeyboardButton(text='29', callback_data='29'),
                     telebot.types.InlineKeyboardButton(text='30', callback_data='30'),
                     telebot.types.InlineKeyboardButton(text='31', callback_data='31'))

        rehersal_time = call.data
        bot.send_message(call.message.chat.id, f'Kомнатa для бронирования {rehersal_room}\nПользователь - {rehersal_user}\nВремя репетиции - {rehersal_time}\nДатa(число месяца) - {rehersal_date}\n\nВыберите Дату(число месяца) для репетиции...', reply_markup=keyboard)

    elif call.data in ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']:

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(telebot.types.InlineKeyboardButton(text='Забронировать', callback_data='book'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='Начало', callback_data='book_rehersal'))
        keyboard.row(telebot.types.InlineKeyboardButton(text='Расписание см.', callback_data='see_bookings'))

        rehersal_date = call.data
        bot.send_message(call.message.chat.id, f'Kомнатa для бронирования {rehersal_room}\nПользователь - {rehersal_user}\nВремя репетиции - {rehersal_time}\nДатa(число месяца) - {rehersal_date}\n', reply_markup=keyboard)

    elif call.data == 'book':

        booking_info = {
            "room": rehersal_room,
            "user": rehersal_user,
            "time": rehersal_time,
            "date": rehersal_date
        }
        file_path = 'bookings.json'

        if not os.path.exists(file_path):
            with open(file_path,'w') as file:
                json.dump([],file)

        def check_booking_availability(new_booking):
            file_path = "bookings.json"
            if not os.path.exists(file_path):
                return True  # No bookings exist, so the new booking is available

            with open(file_path, "r") as file:
                existing_bookings = json.load(file)
            for existing_booking in existing_bookings:
                if (existing_booking["room"] == new_booking["room"] and
                    existing_booking["date"] == new_booking["date"] and
                    existing_booking["time"] == new_booking["time"]):
                    return False  # A booking with the same details already exists
            return True  # No conflicting bookings found

        if check_booking_availability(booking_info):
            with open("bookings.json", "r+") as file:
                try:
                    data = json.load(file)
                except ValueError:
                    data = []
                data.append(booking_info)
                file.seek(0)
                json.dump(data, file, indent=4)
                file.truncate()
            bot.send_message(call.message.chat.id, f'Kомнатa для бронирования {rehersal_room}\nПользователь - {rehersal_user}\nВремя репетиции - {rehersal_time}\nДатa(число месяца) - {rehersal_date}\n\nЗАБРОНИРОВАНО\nБронирование успешно сохранено в файл.')

        else:
            bot.send_message(call.message.chat.id, f'Комната занята. Посмотрите другие даты.')

    elif call.data == 'see_bookings':

        keyboard = telebot.types.InlineKeyboardMarkup()
        keyboard.row(telebot.types.InlineKeyboardButton(text='Начало', callback_data='book_rehersal'))

        def print_bookings():
            file_path = "bookings.json"

            if not os.path.exists(file_path):
                bot.send_message(call.message.chat.id, f'Нет бронирований\n')
                return

            with open(file_path, "r") as file:
                data = json.load(file)

            sorted_bookings = sorted(data, key=lambda x: x['date'])

            bot.send_message(call.message.chat.id, f'Бронирования\n')
            for booking in sorted_bookings:
                bot.send_message(call.message.chat.id, f"Комната: {booking['room']}\nПользователь: {booking['user']}\nВремя: {booking['time']}\nДата: {booking['date']}\n__________________\n")
        print_bookings()
        bot.send_message(call.message.chat.id, f'Добро пожаловать в BeatBox\n\n /start - перезапустить\n', reply_markup=keyboard)

bot.polling()
